<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.pronoiahealth</groupId>
	<artifactId>olhie</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>OLHIE</name>
	<description>Open Library of Health Information Exchange</description>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the message: [WARNING] 
			Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. 
			build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

		<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
			dependencies from org.jboss.spec will have their version defined by this 
			BOM -->
		<version.org.jboss.spec.jboss.javaee6>3.0.2.Final</version.org.jboss.spec.jboss.javaee6>
		<version.org.jboss.bom.errai>1.0.5.CR1</version.org.jboss.bom.errai>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 3.0.2.Final-redhat-1 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!-- <version.org.jboss.spec.jboss.javaee6>3.0.2.Final-redhat-1</version.org.jboss.spec.jboss.javaee6> -->

		<!-- This version is specified here because Maven plugin versions can't 
			be managed by BOMs. -->
		<version.org.codehaus.mojo.gwt.maven.plugin>2.5.1</version.org.codehaus.mojo.gwt.maven.plugin>

		<!-- version.org.jboss.errai>3.0-SNAPSHOT</version.org.jboss.errai -->
		<version.org.jboss.errai>2.4.1.Final</version.org.jboss.errai>
		<version.com.google.gwt>2.5.1</version.com.google.gwt>
		<version.org.codehaus.mojo.gwt.maven.plugin>${version.com.google.gwt}</version.org.codehaus.mojo.gwt.maven.plugin>
		<resteasy.version>2.3.2.Final</resteasy.version>
		<!-- orientdb.version>1.3.0</orientdb.version -->
		<orientdb.version>1.4.1</orientdb.version>
		<deltaspike.version>0.5</deltaspike.version>
		<vectomatic.svg.version>0.5.7</vectomatic.svg.version>
		<vectomatic.file.version>0.3.3</vectomatic.file.version>
		<apache.fileupload.version>1.2.2</apache.fileupload.version>
		<org.moxieapps.fileupload.version>1.1.0</org.moxieapps.fileupload.version>
		<itext.version>4.2.0</itext.version>
		<gwt.bootstrap.version>2.3.2.0-SNAPSHOT</gwt.bootstrap.version>
		<slf4j.version>1.6.1</slf4j.version>
		<dnd.version>3.2.0</dnd.version>
		<version.gwt.recaptcha>1.0.0.Beta2</version.gwt.recaptcha>
		<version.gwtquery>1.3.3</version.gwtquery>
		<version.gwtquery.chosen>1.2.0</version.gwtquery.chosen>
		<version.gwt.log>3.2.1</version.gwt.log>
		<apache.commons.imaging>1.1-SNAPSHOT</apache.commons.imaging>
		<version.tooltip>1.1-SNAPSHOT</version.tooltip>
		<version.gson>2.2.4</version.gson>
		<gwtquery.draggable>1.0.4</gwtquery.draggable>
		<gwtquery.droppable>1.0.8</gwtquery.droppable>
	</properties>

	<repositories>
		<repository>
			<id>sonatype</id>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>

		<repository>
			<id>gwtquery-ui-repository</id>
			<url>http://gwtquery-ui.googlecode.com/svn/mavenrepo</url>
		</repository>

		<!-- Repository for gquery plugins -->
		<repository>
			<id>gwtquery-plugins</id>
			<url>http://gwtquery-plugins.googlecode.com/svn/mavenrepo</url>
		</repository>

		<repository>
			<id>repo</id>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>file://${project.basedir}/extra_libs</url>
		</repository>

		<repository>
			<id>maven-repository-group</id>
			<name>Maven Repository Group</name>
			<url>http://repo1.maven.org/maven2/</url>
			<layout>default</layout>
			<releases>
				<updatePolicy>always</updatePolicy>
			</releases>
		</repository>

		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<updatePolicy>always</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>gwt-recaptcha</id>
			<url>http://gwt-recaptcha.googlecode.com/svn/repo</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
				the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
				any version of JBoss AS that implements Java EE 6, not just JBoss AS 7! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>${version.org.jboss.spec.jboss.javaee6}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-errai</artifactId>
				<version>${version.org.jboss.bom.errai}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Errai Javaee -->
			<!--dependency> <groupId>org.jboss.errai</groupId> <artifactId>errai-javaee-all</artifactId> 
				<version>${version.org.jboss.errai}</version> </dependency -->

			<!-- Errai Core and ErraiBus -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-bus</artifactId>
				<version>${version.org.jboss.errai}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.inject</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.annotation</groupId>
						<artifactId>jsr250-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-ioc</artifactId>
				<version>${version.org.jboss.errai}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.inject</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.annotation</groupId>
						<artifactId>jsr250-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-marshalling</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-tools</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-ui</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-data-binding</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>

			<!-- Errai JAX-RS -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-jaxrs-client</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-jaxrs-provider</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>

			<!-- Errai CDI Integration Modules -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-cdi-client</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-javax-enterprise</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-weld-integration</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-navigation</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>

			<!-- AS support -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-jboss-as-support</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>

			<!-- Orientdb -->
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orient-commons</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-core</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-client</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-object</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-enterprise</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-server</artifactId>
				<version>${orientdb.version}</version>
			</dependency>

			<!-- gwtbootstrap -->
			<dependency>
				<groupId>com.github.gwtbootstrap</groupId>
				<artifactId>gwt-bootstrap</artifactId>
				<version>${gwt.bootstrap.version}</version>
			</dependency>

			<!-- DeltaSpike -->
			<dependency>
				<groupId>org.apache.deltaspike.core</groupId>
				<artifactId>deltaspike-core-api</artifactId>
				<version>${deltaspike.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.core</groupId>
				<artifactId>deltaspike-core-impl</artifactId>
				<version>${deltaspike.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.modules</groupId>
				<artifactId>deltaspike-jpa-module-api</artifactId>
				<version>${deltaspike.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.modules</groupId>
				<artifactId>deltaspike-jpa-module-impl</artifactId>
				<version>${deltaspike.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.modules</groupId>
				<artifactId>deltaspike-security-module-api</artifactId>
				<version>${deltaspike.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.modules</groupId>
				<artifactId>deltaspike-security-module-impl</artifactId>
				<version>${deltaspike.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- file upload -->
			<dependency>
				<groupId>org.vectomatic</groupId>
				<artifactId>lib-gwt-file</artifactId>
				<version>${vectomatic.file.version}</version>
			</dependency>
			<dependency>
				<groupId>org.vectomatic</groupId>
				<artifactId>lib-gwt-svg</artifactId>
				<version>${vectomatic.svg.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${apache.fileupload.version}</version>
			</dependency>

			<!-- iText -->
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
			</dependency>

			<!-- File upload -->
			<dependency>
				<groupId>org.moxieapps.gwt</groupId>
				<artifactId>org.moxieapps.gwt.uploader</artifactId>
				<version>${org.moxieapps.fileupload.version}</version>
			</dependency>

			<!-- DND -->
			<!-- dependency> <groupId>com.allen-sauer.gwt.dnd</groupId> <artifactId>gwt-dnd</artifactId> 
				<version>${dnd.version}</version> </dependency -->

			<!-- GWTQuery -->
			<dependency>
				<groupId>com.googlecode.gwtquery</groupId>
				<artifactId>gwtquery</artifactId>
				<version>${version.gwtquery}</version>
			</dependency>

			<dependency>
				<groupId>com.googlecode.gwtquery.plugins</groupId>
				<artifactId>droppable-plugin</artifactId>
				<version>${gwtquery.droppable}</version>
			</dependency>

			<dependency>
				<groupId>com.googlecode.gwtquery.plugins</groupId>
				<artifactId>draggable-plugin</artifactId>
				<version>${gwtquery.draggable}</version>
			</dependency>

			<!-- GWTQuery Ratings plgin -->
			<dependency>
				<groupId>com.googlecode.gwtquery.plugins</groupId>
				<artifactId>ratings-plugin</artifactId>
				<version>1.0.1</version>
			</dependency>


			<!-- GWT -->
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${version.com.google.gwt}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${version.com.google.gwt}</version>
			</dependency>

			<!-- Rest easy -->
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxrs</artifactId>
				<version>${resteasy.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- gwtjquery -->
			<!-- dependency> <groupId>com.xedge</groupId> <artifactId>gwt-jquery</artifactId> 
				<version>0.0.1-SNAPSHOT</version> </dependency -->

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-uibinder</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-validation</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-jpa-client</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>

			<!-- recaptcha -->
			<dependency>
				<groupId>com.claudiushauptmann</groupId>
				<artifactId>gwt-recaptcha</artifactId>
				<version>${version.gwt.recaptcha}</version>
			</dependency>

			<!-- gwtquery plugin chosen -->
			<!-- dependency>
				<groupId>com.watopi</groupId>
				<groupId>com.watopi</groupId>
				<artifactId>gwtchosen</artifactId>
				<version>${version.gwtquery.chosen}</version>
			</dependency -->
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-cdi</artifactId>
				<version>${resteasy.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.allen-sauer.gwt.log</groupId>
				<artifactId>gwt-log</artifactId>
				<version>${version.gwt.log}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-imaging</artifactId>
				<version>${apache.commons.imaging}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-common</artifactId>
				<version>${version.org.jboss.errai}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.modules</groupId>
				<artifactId>deltaspike-servlet-module-api</artifactId>
				<version>${deltaspike.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.deltaspike.modules</groupId>
				<artifactId>deltaspike-servlet-module-impl</artifactId>
				<version>${deltaspike.version}</version>
			</dependency>
			<dependency>
				<groupId>com.arcbees.gquery</groupId>
				<artifactId>tooltip</artifactId>
				<version>${version.tooltip}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${version.gson}</version>
			</dependency>
			<dependency>
				<groupId>com.github.jdramaix</groupId>
				<artifactId>gwtchosen</artifactId>
				<version>${version.gwtquery.chosen}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss AS 7 -->

		<!-- Import the CDI API. We use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API. We use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250). We use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API. We use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API. We use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API. We use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Bean Validation API, which is used both on the server and 
			in the client-side code that's translated to JavaScript. -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- GWT validation uses Hibernate Validator, and requires the sources 
			at compile time. -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<scope>provided</scope>
			<classifier>sources</classifier>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- GWT validation also requires the validation API sources at compile 
			time -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<classifier>sources</classifier>
		</dependency>

		<!-- The next set of dependencies are for Errai -->

		<!-- dependency> <groupId>org.jboss.errai</groupId> <artifactId>errai-jboss-as-support</artifactId> 
			</dependency -->

		<!-- GWTQuery -->
		<dependency>
			<groupId>com.googlecode.gwtquery</groupId>
			<artifactId>gwtquery</artifactId>
		</dependency>

		<dependency>
			<groupId>com.googlecode.gwtquery.plugins</groupId>
			<artifactId>droppable-plugin</artifactId>
		</dependency>

		<dependency>
			<groupId>com.googlecode.gwtquery.plugins</groupId>
			<artifactId>draggable-plugin</artifactId>
		</dependency>

		<!-- GWT Query ratings plugin -->
		<dependency>
			<groupId>com.googlecode.gwtquery.plugins</groupId>
			<artifactId>ratings-plugin</artifactId>
		</dependency>

		<!-- gwt-user is required at runtime because we use some of the client/server 
			shared APIs such as RegExp, so scope is 'compile' rather than 'provided'. -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- End of Errai dependencies -->


		<!-- Now we declare any tools needed -->

		<!-- Annotation processor to generate the JPA 2.0 metamodel classes for 
			typesafe criteria queries -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>1.1.1.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- Need this version for OrientDb -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.16.1-GA</version>
		</dependency>

		<!-- OrientDb -->
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orient-commons</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-object</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-enterprise</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-server</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Bootstrap -->
		<dependency>
			<groupId>com.github.gwtbootstrap</groupId>
			<artifactId>gwt-bootstrap</artifactId>
		</dependency>

		<!-- DeltaSpike -->
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jpa-module-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jpa-module-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-security-module-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-security-module-impl</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- File upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>

		<!-- iText -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
		</dependency>

		<!-- Rest easy -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
		</dependency>

		<!-- File upload -->
		<dependency>
			<groupId>org.moxieapps.gwt</groupId>
			<artifactId>org.moxieapps.gwt.uploader</artifactId>
		</dependency>

		<!-- DND -->
		<!-- dependency> <groupId>com.allen-sauer.gwt.dnd</groupId> <artifactId>gwt-dnd</artifactId> 
			</dependency -->

		<!-- gwtjquery -->
		<!-- dependency> <groupId>com.xedge</groupId> <artifactId>gwt-jquery</artifactId> 
			</dependency -->

		<!-- Needed for running tests (you may also use TestNG) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Errai -->
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-bus</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.inject</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>jsr250-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-marshalling</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-tools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-data-binding</artifactId>
		</dependency>

		<!-- Errai JAX-RS -->
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-jaxrs-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-jaxrs-provider</artifactId>
		</dependency>

		<!-- Errai CDI Integration Modules -->
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-cdi-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-javax-enterprise</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-weld-integration</artifactId>
			<exclusions>
				<!-- errai-cdi-jetty is only required for integration testing -->
				<exclusion>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-cdi-jetty</artifactId>
				</exclusion>

				<exclusion>
					<groupId>org.jboss.weld.servlet</groupId>
					<artifactId>weld-servlet</artifactId>
				</exclusion>
			</exclusions>

		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-navigation</artifactId>
		</dependency>

		<!-- AS support -->
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-jboss-as-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-uibinder</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-jpa-client</artifactId>
		</dependency>

		<!-- reCaptua -->
		<dependency>
			<groupId>com.claudiushauptmann</groupId>
			<artifactId>gwt-recaptcha</artifactId>
		</dependency>

		<!-- gwtquery plugin chosen -->
		<!-- dependency>
			<groupId>com.watopi</groupId>
			<artifactId>gwtchosen</artifactId>
		</dependency -->
		<!-- dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util5</artifactId>
			<version>6.1.25</version>
		</dependency -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
		</dependency>
		<dependency>
			<groupId>com.allen-sauer.gwt.log</groupId>
			<artifactId>gwt-log</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-servlet-module-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-servlet-module-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.arcbees.gquery</groupId>
			<artifactId>tooltip</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.jms</groupId>
			<artifactId>jboss-jms-api_1.1_spec</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.jdramaix</groupId>
			<artifactId>gwtchosen</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>

					<!-- Maven will append the version to the finalName (which is the name 
						given to the generated war, and hence the context root) -->
					<warName>${project.artifactId}</warName>

					<!-- We must exclude GWT client local classes from the deployment, or 
						classpath scanners such as Hibernate and Weld get confused when the webapp 
						is bootstrapping. -->
					<packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class</packagingExcludes>

					<archive>
						<manifestEntries>
							<Dependencies>
								org.jboss.as.naming,org.jboss.as.server,org.jboss.msc,com.orienttechnologies.orient,org.jboss.resteasy.resteasy-jaxrs,org.apache.commons.io
							</Dependencies>
						</manifestEntries>
					</archive>

					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>${project.basedir}/src/main/resources/META-INF</directory>
							<targetPath>META-INF</targetPath>
						</resource>
					</webResources>

				</configuration>
			</plugin>

			<!-- GWT plugin to compile client-side java code to javascript and to 
				run GWT development mode -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${version.org.codehaus.mojo.gwt.maven.plugin}</version>
				<configuration>
					<inplace>true</inplace>
					<logLevel>INFO</logLevel>
					<extraJvmArgs>-Xmx4096M -Xms1024M -XX:PermSize=128m -XX:MaxPermSize=256m -Derrai.devel.debugCacheDir=${project.basedir}/.errai -Derrai.marshalling.server.classOutput=${project.build.outputDirectory}</extraJvmArgs>
					<!-- extraJvmArgs>-Xmx512m</extraJvmArgs -->
					<!-- enableClosureCompiler>true</enableClosureCompiler -->

					<!-- Configure GWT's development mode (formerly known as hosted mode) 
						to not start the default server (embedded jetty), but to download the HTML 
						host page from the configured runTarget. -->
					<noServer>true</noServer>
					<runTarget>http://localhost:8080/olhie/Olhie.html</runTarget>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>gwt-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
			<!-- To use, run: mvn package jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.1.0.Final</version>
				<configuration>
					<filename>${project.artifactId}.${project.packaging}</filename>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>

				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}</directory>
							<includes>
								<include>www-test/**</include>
								<include>.gwt/**</include>
								<include>.errai/**</include>
								<include>src/main/webapp/KitchenSink/**</include>
								<include>src/main/webapp/WEB-INF/deploy/**</include>
								<include>src/main/webapp/WEB-INF/lib/**</include>
								<include>**/gwt-unitCache/**</include>
								<include>**/*.JUnit/**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>

				<!-- m2e (Maven integration for Eclipse) requires the following configuration -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.3.0,)</versionRange>
										<goals>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run 
				just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian 
				tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.3</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- We add the JBoss repository as we need the JBoss AS connectors for 
				Arquillian -->
			<repositories>
				<!-- The JBoss Community public repository is a composite repository 
					of several major repositories -->
				<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
				<repository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<!-- These optional flags are designed to speed up your builds by reducing 
						remote server calls -->
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

			<!-- An optional Arquillian testing profile that executes tests in your 
				JBoss AS instance -->
			<!-- This profile will start a new JBoss AS instance, and execute the 
				test, shutting it down when done -->
			<!-- Run with: mvn clean test -Parq-jbossas-managed -->
			<id>arq-jbossas-managed</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-managed</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- We add the JBoss repository as we need the JBoss AS connectors for 
				Arquillian -->
			<repositories>
				<!-- The JBoss Community public repository is a composite repository 
					of several major repositories -->
				<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
				<repository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<!-- These optional flags are designed to speed up your builds by reducing 
						remote server calls -->
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>jboss-public-repository</id>
					<name>JBoss Repository</name>
					<url>http://repository.jboss.org/nexus/content/groups/public</url>
					<releases>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

			<!-- An optional Arquillian testing profile that executes tests in a remote 
				JBoss AS instance -->
			<!-- Run with: mvn clean test -Parq-jbossas-remote -->
			<id>arq-jbossas-remote</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.as</groupId>
					<artifactId>jboss-as-arquillian-container-remote</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
